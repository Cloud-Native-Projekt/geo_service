name: CD Pipeline - Build and Push

on:
  workflow_dispatch:
    inputs:
      services:
        description: 'Services to build (comma-separated, or "all" for all services)'
        required: false
        default: 'all'
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: cloud-native-projekt/geo-service

jobs:
  build-services:
    name: Build Services
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        service:
          - name: geo_service
            dockerfile: geo_service/Dockerfile

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check if service should be built
        id: should_build
        run: |
          SERVICES_INPUT="${{ github.event.inputs.services }}"
          SERVICE_NAME="${{ matrix.service.name }}"
          
          if [ "$SERVICES_INPUT" = "all" ] || [ -z "$SERVICES_INPUT" ]; then
            echo "build=true" >> $GITHUB_OUTPUT
          elif echo "$SERVICES_INPUT" | grep -q "$SERVICE_NAME"; then
            echo "build=true" >> $GITHUB_OUTPUT
          else
            echo "build=false" >> $GITHUB_OUTPUT
          fi

      - name: Set up Docker Buildx
        if: steps.should_build.outputs.build == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        if: steps.should_build.outputs.build == 'true'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        if: steps.should_build.outputs.build == 'true'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.service.name }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push ${{ matrix.service.name }}
        if: steps.should_build.outputs.build == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.service.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  summary:
    name: Build Summary
    runs-on: ubuntu-latest
    needs: [build-services]
    if: always()
    steps:
      - name: Build Summary
        run: |
          echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Services**: ${{ github.event.inputs.services }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit SHA**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Images have been pushed to GHCR and are ready for deployment." >> $GITHUB_STEP_SUMMARY
